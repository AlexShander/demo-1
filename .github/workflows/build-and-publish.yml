name: Build and publish Docker image

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build-and-push:
    if: ${{ github.actor != 'github-actions[bot]' && !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ECR }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ECR }}
          aws-region: eu-central-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Compute image tag (timestamp + short sha)
        id: meta
        run: |
          # Use the actual commit SHA that triggered this workflow
          SHORT_SHA="${{ github.sha }}"
          SHORT_SHA="${SHORT_SHA:0:7}"
          TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
          TAG="${TIMESTAMP}-${SHORT_SHA}"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "TIMESTAMP=${TIMESTAMP}" >> $GITHUB_ENV
          echo "Full commit SHA: ${{ github.sha }}"
          echo "Short SHA: ${SHORT_SHA}"

      - name: Update apps/version.txt before building
        env:
          IMAGE_URL: 863418022499.dkr.ecr.eu-central-1.amazonaws.com/incode-demo-1-app:${{ env.TAG }}
        run: |
          echo "${IMAGE_URL}" > apps/version.txt
          echo "Updated version.txt with: ${IMAGE_URL}"

      - name: Build and push Docker image to ECR
        uses: docker/build-push-action@v4
        with:
          context: ./apps
          file: ./apps/Dockerfile
          push: true
          tags: |
            863418022499.dkr.ecr.eu-central-1.amazonaws.com/incode-demo-1-app:${{ env.TAG }}
            863418022499.dkr.ecr.eu-central-1.amazonaws.com/incode-demo-1-app:latest

      - name: Commit updated version.txt (use PAT)
        env:
          IMAGE_URL: 863418022499.dkr.ecr.eu-central-1.amazonaws.com/incode-demo-1-app:${{ env.TAG }}
          PERSONAL_GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add apps/version.txt
          git commit -m "ci: update apps/version.txt -> ${IMAGE_URL} [skip ci]" || echo "no changes to commit"
          # Use personal access token for push so that the token owner's bypass rules apply
          if [ -n "${PERSONAL_GITHUB_TOKEN}" ]; then
            remote_url="https://x-access-token:${PERSONAL_GITHUB_TOKEN}@github.com/${{ github.repository }}.git"
            git push "${remote_url}" HEAD:main
          else
            echo "PERSONAL_GITHUB_TOKEN not set; attempting normal push"
            git push origin HEAD:main
          fi
